{"version":3,"sources":["Components/Context/FirebaseContext.js","Components/FormUtil.js","Components/SignIn.js","Components/Nav.js","Components/Footer.js","Components/Context/NotificationContext.js","Components/Reducers/NotificationsReducer.js","Components/NewsItem.js","Components/News.js","Components/Stocks.js","Components/Tasks.js","Components/Weather.js","Components/Controller.js","Components/NotificationSnackbar.js","Components/NotificationProvider.js","Components/FirebaseProvider.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","FormUtil","_ref","children","submit","console","log","react_default","a","createElement","onKeyPress","e","which","useStyles","makeStyles","theme","paper","backgroundColor","padding","textAlign","display","justifyContent","formContent","margin","fontSize","width","buttons","SignIn","props","firebaseAuth","useContext","FirebaseProvider","classes","_useState","useState","_useState2","Object","slicedToArray","showForm","updateShowForm","_useState3","_useState4","loginType","updateLoginType","_useState5","_useState6","firstName","updateFirstName","_useState7","_useState8","lastName","updateLastName","_useState9","_useState10","email","updateEmail","_useState11","_useState12","password","updatePassword","_useState13","_useState14","loggingIn","updateLoggingIn","_useState15","_useState16","error","updateError","selectLogin","loginSelect","formSignIn","emailInput","passwordInput","signIn","then","data","modalReset","catch","err","message","formCreateAccount","createAccount","addUser","user","uid","closeModal","Dialog","aria-labelledby","aria-describedby","open","formOpen","onClose","ClickAwayListener","onClickAway","DialogContent","className","Box","Button","onClick","Components_FormUtil","Fragment","FormControl","fullWidth","Input","inputComponent","label","placeholder","onChange","event","target","value","type","Autorenew_default","Typography","style","color","root","flexGrow","menuButton","marginRight","spacing","title","appBar","Nav","modal","updateModal","AppBar","position","Toolbar","IconButton","edge","aria-label","variant","name","signOut","Components_SignIn","footer","marginTop","height","icon","Footer","alignItems","Copyright_default","NotificationContext","NotificationsReducer","state","action","objectSpread","notification","NewsItem","Grid","container","alignContent","item","sm","md","CardMedia","component","src","image","Link","rel","underline","href","url","my","date","mb","content","dividerStyle","marginBottom","buttonStyle","&:hover","cursor","News","firebase","search","updateSearch","news","updateNews","newsToShow","updateNewsToShow","notificationDispatch","useEffect","userData","getInfo","newsData","articles","length","sortedNews","sort","b","moment","publishedAt","format","Card","flexDirection","sizeChange","fullScreen","includes","FullscreenExit_default","decreaseSize","Fullscreen_default","increaseSize","CardContent","CardActionArea","slice","map","newsItem","i","key","Components_NewsItem","alt","urlToImage","fromNow","Divider","size","InputLabel","htmlFor","updateSearchData","Stocks","anchorEl","updateAnchorEl","stocks","updateStocks","updateAutoComplete","autoCompleteList","updateAutoCompleteList","searchTimer","_useContext","_useContext2","fetchData","stock","stockData","fetchAutoComplete","listData","dataCheck","defaultKeyStatistics","profitMargins","fmt","summaryProfile","sector","CardActions","currentTarget","clearTimeout","setTimeout","Popper","Paper","square","elem","MenuItem","symbol","addButton","background","boxShadow","plusIcon","borderRadius","deleteButton","listItem","listText","textDecoration","invisible","visibility","Tasks","taskItem","updateTaskItem","hoverVis","updateHoverVis","showAdd","updateShowAdd","checkedItems","editItem","updateEditItem","handleChange","stateItem","tasks","List","ListItem","id","onMouseEnter","identifier","toString","onMouseLeave","Checkbox","checked","completed","taskName","currentCompleted","taskId","updateTask","ListItemText","Grow","in","timeout","lg","disabled","editButton","elementId","elementName","deleteTask","addTask","newTasks","AddCircle","maxWidth","table","Weather","weather","updateWeather","zip","daily","Zoom","Table","TableHead","TableRow","TableCell","TableBody","day","time","apparentTemperatureHigh","apparentTemperatureLow","summary","Controller","window","innerWidth","screenSize","updateScreenSize","addEventListener","apiPost","route","axios","post","updateFullScreen","concat","toConsumableArray","filtered","filter","Components_News","Components_Weather","Components_Stocks","Components_Tasks","NotificationSnackbar","stateDispatch","Snackbar","autoHideDuration","NotificationProvider","defaultState","_useReducer","useReducer","_useReducer2","Context_NotificationContext","Provider","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","taskData","locationData","updateUserData","updateUser","auth","onAuthStateChanged","collection","doc","get","userInfo","userWithName","onSnapshot","todos","todoList","forEach","todoItem","todo","push","prev","update","location","task","add","delete","signInWithEmailAndPassword","createUserWithEmailAndPassword","reload","set","newUser","Context_FirebaseContext","App","Components_NotificationProvider","Components_FirebaseProvider","Components_Nav","Components_Controller","Components_NotificationSnackbar","Components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecc6a1b2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FirebaseContext = React.createContext();\n\nexport default FirebaseContext;","import React from \"react\";\n\n\nconst FormUtil = ({ children, submit }) => {\n    console.log(children);\n    console.log(submit);\n\n    const handleSubmit = (e) => {\n        if (e.which === 13) {\n            console.log(\"submit?\")\n            submit();\n        }\n    }\n    return (\n        <form onKeyPress={handleSubmit}>\n            {children}\n        </form>\n    )\n};\n\nexport default FormUtil;","import React, { useState, useContext } from \"react\";\nimport { Dialog, DialogContent, Input, Box, FormControl, Grid, Button, Paper, makeStyles, ClickAwayListener, Typography } from \"@material-ui/core\";\nimport Autorenew from \"@material-ui/icons/Autorenew\"\nimport FirebaseProvider from \"./Context/FirebaseContext\";\nimport FormUtil from \"./FormUtil\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        backgroundColor: \"white\",\n        padding: \"2rem\",\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    formContent: {\n        margin: \"2rem auto\",\n        textAlign: \"center\",\n        fontSize: \"2rem\",\n        width: \"100%\"\n    },\n    buttons: {\n        margin: \"0 auto\"\n    }\n}));\n\n// const RefComp = React.forwardRef((props, ref) => <div ref={ref}> {props.children} </div>);\n\nconst SignIn = (props) => {\n\n    // const ref = React.createRef();\n\n    const firebaseAuth = useContext(FirebaseProvider);\n\n    const classes = useStyles();\n\n    const [showForm, updateShowForm] = useState(false);\n\n    const [loginType, updateLoginType] = useState(null)\n\n    const [firstName, updateFirstName] = useState(\"\");\n\n    const [lastName, updateLastName] = useState(\"\");\n\n    const [email, updateEmail] = useState(\"\");\n\n    const [password, updatePassword] = useState(\"\");\n\n    const [loggingIn, updateLoggingIn] = useState(false);\n\n    const [error, updateError] = useState(null);\n\n    const selectLogin = (loginSelect) => {\n        updateShowForm(true)\n        if (loginSelect === \"create\") {\n            updateLoginType(\"create\")\n        } else if (loginSelect === \"signin\") {\n            updateLoginType(\"signin\")\n        } else {\n            console.log(\"Login type not available\")\n        }\n    }\n\n    const formSignIn = (emailInput, passwordInput) => {\n        updateLoggingIn(true)\n        firebaseAuth.signIn(emailInput, passwordInput).then(data => {\n            if (data) {\n                updateError(null);\n                modalReset()\n            };\n        }).catch(err => { updateError(err.message); updateLoggingIn(false); });\n    };\n\n    const formCreateAccount = (emailInput, passwordInput) => {\n        updateLoggingIn(true)\n        firebaseAuth.createAccount(emailInput, passwordInput).then(data => {\n            if (data) {\n                updateError(null);\n                firebaseAuth.addUser(data.user.uid, { firstName: firstName, lastName: lastName })\n                modalReset()\n            }\n\n        }).catch(err => { updateError(err.message); updateLoggingIn(false); });\n    };\n\n    const modalReset = () => {\n        props.closeModal();\n        updateLoggingIn(false);\n        updateLoginType(null);\n        updateShowForm(false);\n        updatePassword(\"\");\n        updateEmail(\"\");\n        updateFirstName(\"\");\n        updateLastName(\"\");\n    }\n    const determineLogin = () => {\n        if (loginType === \"signin\") {\n            return formSignIn(email, password);\n        } else if (loginType === \"create\") {\n            return formCreateAccount(email, password);\n        }\n    }\n\n    const handleEmailChange = (event) => {\n        updateEmail(event.target.value)\n    };\n    const handlePasswordChange = (event) => {\n        updatePassword(event.target.value)\n    };\n\n    const firstNameChange = (event) => {\n        updateFirstName(event.target.value);\n    }\n\n    const lastNameChange = (event) => {\n        updateLastName(event.target.value);\n    }\n    let content = (\n        <Dialog\n            // style={{ top: \"10%\", margin: \"auto\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"0\" }}\n            aria-labelledby=\"sign-in-form\"\n            aria-describedby=\"use-this-form-to-sign-in\"\n            open={props.formOpen}\n            onClose={() => updateShowForm(false)}\n        >\n            <ClickAwayListener onClickAway={modalReset} >\n                <DialogContent className={classes.paper} >\n                    {!showForm &&\n                        <Box display=\"flex\" justifyContent=\"center\">\n                            <Button onClick={() => selectLogin(\"create\")}>Create Account</Button>\n                            <Button onClick={() => selectLogin(\"signin\")}>Sign In</Button>\n                        </Box>\n                    }\n                    {showForm &&\n                        <FormUtil submit={determineLogin} >\n                            {loginType === \"create\" &&\n                                <>\n                                    <FormControl fullWidth={true}>\n                                        <Input\n                                            inputComponent=\"input\"\n                                            label=\"First Name\"\n                                            placeholder=\"First Name\"\n                                            // value={email}\n                                            fullWidth={true}\n                                            onChange={firstNameChange}\n                                        />\n                                    </FormControl>\n                                    <FormControl fullWidth={true}>\n                                        <Input\n                                            inputComponent=\"input\"\n                                            label=\"Last Name\"\n                                            placeholder=\"Last Name\"\n                                            fullWidth={true}\n                                            // value={email}\n                                            onChange={lastNameChange}\n                                        />\n                                    </FormControl>\n                                </>\n                            }\n                            <FormControl fullWidth={true}>\n                                <Input\n                                    inputComponent=\"input\"\n                                    label=\"Email\"\n                                    placeholder=\"Email\"\n                                    fullWidth={true}\n                                    value={email}\n                                    onChange={handleEmailChange}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth={true}>\n\n                                <Input\n                                    inputComponent=\"input\"\n                                    label=\"Password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    fullWidth={true}\n                                    value={password}\n                                    onChange={handlePasswordChange}\n                                />\n                            </FormControl >\n                            {loggingIn &&\n                                <Box display=\"flex\" justifyContent=\"center\">\n                                    <Autorenew className=\"loadingIcon\" />\n                                </Box>\n                            }\n                            <Box display=\"flex\" justifyContent=\"center\">\n                                {loginType === \"signin\" && <Button onClick={() => formSignIn(email, password)}>Sign In</Button>}\n                                {loginType === \"create\" && <Button onClick={() => formCreateAccount(email, password)}>Create Account</Button>}\n                            </Box>\n                            <Box display=\"flex\" justifyContent=\"center\">\n                                {error && <Typography style={{ color: \"red\", textAlign: \"center\" }}>{error}</Typography>}\n                            </Box>\n                        </FormUtil>\n                    }\n                </DialogContent>\n            </ClickAwayListener>\n        </Dialog >\n    )\n    return content;\n}\n\nexport default SignIn;","import React, { useContext, useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ClickAwayListener } from \"@material-ui/core\";\nimport SignIn from \"./SignIn\";\nimport FirebaseProvider from \"./Context/FirebaseContext\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#455766\"\n  }\n}));\n\nconst Nav = (props) => {\n\n  const firebaseAuth = useContext(FirebaseProvider);\n\n  const classes = useStyles();\n\n  // const [user, updateUser] = useState(null)\n\n  const [modal, updateModal] = useState(false);\n\n  const openModal = () => {\n    console.log(\"opened\")\n    updateModal(true)\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\")\n    updateModal(false);\n  };\n\n  // useEffect(() => {\n  //   updateUser(firebaseAuth.getUser())\n  //   console.log(user)\n  // }, []);\n  console.log(firebaseAuth.user)\n\n  let content = (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"Menu\">\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {firebaseAuth.user && firebaseAuth.user.name}\n          </Typography>\n          {firebaseAuth.user ?\n            <Button color=\"inherit\" onClick={firebaseAuth.signOut}>Sign Out</Button>\n            :\n            <Button color=\"inherit\" onClick={openModal}>Sign In</Button>\n          }\n        </Toolbar>\n      </AppBar>\n      <SignIn formOpen={modal} closeModal={closeModal} />\n    </div>\n  )\n  return content;\n}\n\nexport default Nav;","import React from 'react';\n\nimport { makeStyles, Box, Typography } from \"@material-ui/core\";\nimport Copyright from \"@material-ui/icons/Copyright\";\n\nconst useStyles = makeStyles({\n    footer: {\n        marginTop: \"2rem\",\n        backgroundColor: \"#455766\",\n        color: \"rgb(240,240,240)\",\n        height: \"2rem\",\n        padding: \"0.5rem\",\n    },\n    icon: {\n        margin: \"auto 0.5rem\"\n    }\n})\n\nfunction Footer(props) {\n\n    const classes = useStyles();\n\n    return (\n        <footer className={classes.footer}>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" textAlign=\"center\">\n                <Typography variant=\"h5\" display=\"inline\">Daily Dash</Typography> <Copyright className={classes.icon} />\n            </Box>\n        </footer>\n    )\n\n}\n\nexport default Footer;","import React from \"react\";\n\nconst NotificationContext = React.createContext()\n\nexport default NotificationContext;","export const UPDATE_NOTIFICATION = \"UPDATE_NOTIFICATION\"\n\nconst NotificationsReducer = (state, action) => {\n    switch(action.type) {\n        case UPDATE_NOTIFICATION:\n            return {...state, notification: action.notification}\n            \n        default:\n            return state;\n    }\n};\nexport default NotificationsReducer;","import React from 'react';\n\nimport { Link, Grid, CardMedia, Typography, Box } from \"@material-ui/core\";\n\nconst NewsItem = (props) => {\n\n    return (\n        <Grid container spacing={2} alignContent=\"center\" alignItems=\"center\">\n            <Grid item sm={12} md={4}>\n                <CardMedia component=\"img\" src={props.image}></CardMedia>\n            </Grid>\n            <Grid item sm={12} md={8}>\n                <Link\n                    component=\"a\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    underline=\"hover\"\n                    href={props.url}> {props.title} </Link>\n                <Box my={2}><Typography variant=\"body1\" component=\"p\">Published: {props.date} </Typography></Box>\n                <Box mb={2}><Typography variant=\"body1\" component=\"p\">{props.content} </Typography></Box>\n            </Grid>\n        </Grid>\n    )\n\n}\n\nexport default NewsItem;","import React, { useContext, useEffect, useState, useReducer } from 'react';\n\nimport moment from \"moment\";\n\nimport {\n    Card, CardContent, Typography, CardActions, Box,\n    Button, CardMedia, CardActionArea, FormControl, InputLabel, Input, Divider\n} from \"@material-ui/core\";\n\nimport NotificationContext from \"./Context/NotificationContext\";\n// import NotificationSnackbar from \"./NotificationSnackbar\";\n// import NotificationProvider from \"./NotificationProvider\";\nimport { UPDATE_NOTIFICATION } from './Reducers/NotificationsReducer';\nimport NotificationsReducer from \"./Reducers/NotificationsReducer\";\nimport NewsItem from \"./NewsItem\";\nimport FirebaseContext from './Context/FirebaseContext';\nimport { makeStyles } from '@material-ui/styles';\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\n\nconst useStyles = makeStyles({\n    dividerStyle: {\n        marginTop: \"1.5em\",\n        marginBottom: \"1.5em\"\n    },\n    buttonStyle: {\n        justifyContent: \"center\"\n    },\n    icon: {\n        margin: \"0.5rem 0.5rem 0 0\",\n        \"&:hover\": {\n            cursor: \"pointer\"\n        }\n    }\n});\n\nconst News = props => {\n\n    const classes = useStyles();\n\n    const firebase = useContext(FirebaseContext);\n\n    const [search, updateSearch] = useState(\"\");\n\n    const [news, updateNews] = useState();\n\n    const [newsToShow, updateNewsToShow] = useState(3);\n\n    const notificationDispatch = useContext(NotificationContext)[1];\n\n    const showMore = () => {\n        news.length > newsToShow ? updateNewsToShow(newsToShow + 3) : updateNewsToShow(news.length);\n    };\n\n    const handleChange = (event) => {\n        updateSearch(event.target.value);\n    };\n\n    const fetchData = () => {\n\n        let url = \"/api/news\";\n        let data = search;\n        if (search === \"\") {\n            notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a valid search term\" } })\n        } else {\n            firebase.user && firebase.updateSearchData(\"news\", search);\n            props.getInfo(url, { news: data }).then(newsData => {\n                if (newsData.data.articles.length < 1) {\n                    notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Hmm, looks like we couldn't find any news for that search\" } })\n                } else {\n                    let sortedNews = newsData.data.articles.sort(function (a, b) {\n                        return moment(b.publishedAt).format(\"X\") - moment(a.publishedAt).format(\"X\");\n                    });\n                    updateNews(sortedNews);\n                }\n            });\n        }\n    };\n    useEffect(() => {\n        if (firebase.userData && firebase.userData.news) {\n            props.getInfo(\"/api/news\", { news: firebase.userData.news }).then(newsData => {\n                if (newsData.data.articles.length < 1) {\n                    notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Hmm, looks like we couldn't find any news for that search\" } })\n                } else {\n                    let sortedNews = newsData.data.articles.sort(function (a, b) {\n                        return moment(b.publishedAt).format(\"X\") - moment(a.publishedAt).format(\"X\");\n                    });\n                    updateNews(sortedNews);\n                }\n            });\n        }\n    }, [firebase.userData]);\n    let content = (\n\n        <Card>\n            <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n                {props.sizeChange.fullScreen.includes(\"news\") ?\n                    <FullscreenExit\n                        onClick={() => props.sizeChange.decreaseSize(\"news\")} />\n                    :\n                    <Fullscreen\n                        onClick={() => props.sizeChange.increaseSize(\"news\")} />\n                }\n            </Box>\n            <CardContent>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        image=\"./images/news.jpg\"\n                        title=\"news\"\n                    />\n                </CardActionArea>\n                <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n                    The News\n                </Typography>\n                {/* <Typography variant=\"body2\" component=\"p\"> */}\n                {news &&\n                    news.slice(0, newsToShow).map((newsItem, i) => {\n                        return (\n                            <div key={i}>\n                                <NewsItem\n                                    alt={newsItem.title}\n                                    image={newsItem.urlToImage}\n                                    title={newsItem.title}\n                                    url={newsItem.url}\n                                    content={newsItem.content}\n                                    date={moment(newsItem.publishedAt).fromNow()}\n                                />\n                                <Divider classes={{ root: classes.dividerStyle }} />\n                            </div>\n                        )\n                    })\n                }\n                {news &&\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Button size=\"small\" onClick={showMore}>Show More</Button>\n                    </Box>\n                }\n\n            </CardContent>\n            <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n                <FormControl>\n                    <InputLabel htmlFor=\"my-input\">News Search</InputLabel>\n                    <Input aria-describedby=\"my-helper-text\" onChange={handleChange} />\n                </FormControl>\n                <Button size=\"large\" onClick={fetchData}>Get News</Button>\n            </Box>\n        </Card>\n    )\n    return content;\n}\n\nexport default News;","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Card, CardContent, Typography, CardActions, Paper, MenuItem, Popper, Box,\n  Button, CardMedia, CardActionArea, FormControl, InputLabel, Input, makeStyles\n} from \"@material-ui/core\";\n\nimport NotificationContext from \"./Context/NotificationContext\";\nimport { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\";\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\nimport FirebaseContext from \"./Context/FirebaseContext\";\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    margin: \"0.5rem 0.5rem 0 0\",\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n}));\n\nconst Stocks = (props) => {\n\n  const firebase = useContext(FirebaseContext);\n\n  const classes = useStyles();\n\n  const [anchorEl, updateAnchorEl] = useState(null);\n\n  //variables\n  const [search, updateSearch] = useState(\"\");\n\n  const [stocks, updateStocks] = useState();\n\n  const [autoComplete, updateAutoComplete] = useState(\"\");\n\n  const [autoCompleteList, updateAutoCompleteList] = useState();\n\n  let searchTimer = null;\n\n  const handleChange = (event) => {\n    updateAnchorEl(event.currentTarget);\n    updateSearch(event.currentTarget.value)\n    updateAutoComplete(event.currentTarget.value);\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => fetchAutoComplete(event), 200);\n  }\n\n  const [state, notificationDispatch] = useContext(NotificationContext);\n\n  //functions\n  const fetchData = () => {\n    let url = \"/api/stocks\";\n    if (search === \"\" || undefined) {\n      notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a valid search term\" } })\n    } else {\n      firebase.userData && firebase.updateSearchData(\"stocks\", search);\n      props.getInfo(url, { stock: search }).then(stockData => {\n        updateStocks(stockData.data);\n        updateAutoCompleteList(null);\n      })\n    }\n  }\n\n  const fetchAutoComplete = () => {\n    let url = \"/api/stockautocomplete\"\n    props.getInfo(url, { search: search }).then(listData => {\n      updateAutoCompleteList(listData.data);\n    })\n  }\n\n  const autoCompleteClick = (item) => {\n    updateSearch(item);\n    fetchData();\n  };\n\n  const dataCheck = (data) => {\n    return data ? data : \"Not Available\";\n  };\n\n  useEffect(() => {\n    if (firebase.userData) {\n      let url = \"/api/stocks\"\n      props.getInfo(url, { stock: firebase.userData.stocks }).then(listData => {\n        updateStocks(listData.data);\n      })\n    }\n  }, [firebase.userData]);\n\n  //component layout\n  let content = (\n    <Card>\n      <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n        {props.sizeChange.fullScreen.includes(\"stocks\") ?\n          <FullscreenExit\n            onClick={() => props.sizeChange.decreaseSize(\"stocks\")} />\n          :\n          <Fullscreen\n            onClick={() => props.sizeChange.increaseSize(\"stocks\")} />\n        }\n      </Box>\n      <CardContent>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            image=\"./images/stocks.jpg\"\n            title=\"stocks\"\n          />\n        </CardActionArea>\n        <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n          The Stocks\n        </Typography>\n        {stocks &&\n          <Box>\n            <Typography variant=\"body2\" component=\"p\">Profits: {dataCheck(stocks.defaultKeyStatistics.profitMargins.fmt)}</Typography>\n            <Typography variant=\"body2\" component=\"p\">52 Week Change: {dataCheck(stocks.defaultKeyStatistics[\"52WeekChange\"].fmt)} </Typography>\n            <Typography variant=\"body2\" component=\"p\">Sector: {dataCheck(stocks.summaryProfile.sector)} </Typography>\n          </Box>\n        }\n      </CardContent>\n      <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n        <CardActions>\n          <FormControl >\n            <InputLabel htmlFor=\"my-input\">Check Stocks</InputLabel>\n            <Input aria-describedby=\"search for Stocks!\" value={search} onChange={handleChange} />\n            {autoCompleteList &&\n              <Popper anchorEl={anchorEl} open={autoCompleteList ? true : false}>\n                <Paper square>{\n                  autoCompleteList.map(elem => {\n                    return <MenuItem key={elem.symbol} onClick={() => autoCompleteClick(elem.symbol)}>{elem.symbol}</MenuItem>\n                  })}\n                </Paper>\n              </Popper>\n            }\n          </FormControl>\n          <Button size=\"large\" onClick={fetchData}>Get Stocks</Button>\n        </CardActions>\n      </Box>\n    </Card>\n  )\n  return content;\n}\n\nexport default Stocks;","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    Card, CardContent, Typography, CardActions, Grid, Grow, Checkbox, Box, List, ListItem, ListItemText,\n    Button, CardMedia, CardActionArea, FormControl, InputLabel, Input\n} from \"@material-ui/core\";\nimport { AddCircle } from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport NotificationContext from \"./Context/NotificationContext\";\nimport FirebaseContext from './Context/FirebaseContext';\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\n\nconst coolGreen = \"linear-gradient(45deg, #8CD790 30%, #AAFCB8 90%)\"\nconst useStyles = makeStyles({\n    addButton: {\n        background: coolGreen,\n        margin: \"1rem, 1rem, 0, 0\",\n        \"&:hover\": {\n            boxShadow: \"0 0 0.5rem 0.25rem #6D676E\"\n        }\n    },\n    plusIcon: {\n        margin: \"0 auto\",\n        color: \"#8CD790\",\n        \"&:hover\": {\n            cursor: \"pointer\",\n            backgroundColor: \"#6D676E\",\n            borderRadius: \"25%\"\n        }\n    },\n    deleteButton: {\n        color: \"#C41E3D\"\n    },\n    listItem: {\n        \"&:hover\": {\n            backgroundColor: \"#E1E1E1\"\n        }\n    },\n    listText: {\n        textDecoration: \"line-through\"\n    },\n    invisible: {\n        visibility: \"hidden\"\n    },\n    icon: {\n        margin: \"0.5rem 0.5rem 0 0\",\n        \"&:hover\": {\n            cursor: \"pointer\"\n        }\n    }\n});\n\n\nconst Tasks = props => {\n\n    const classes = useStyles();\n\n    const firebase = useContext(FirebaseContext);\n\n    const [taskItem, updateTaskItem] = useState();\n\n    const [hoverVis, updateHoverVis] = useState(\"\");\n\n    const [showAdd, updateShowAdd] = useState(true);\n\n    const [checkedItems, updateCheckedItems] = useState([]);\n\n    const [editItem, updateEditItem] = useState(\"\");\n\n    const mouseIn = (identifier) => {\n        updateHoverVis(identifier.toString())\n    };\n\n    const mouseOut = (identifier) => {\n        updateHoverVis(\"\")\n    };\n\n    const deleteItem = (taskId) => {\n        firebase.deleteTask(taskId).then(() => console.log(\"Deleted\"));\n    };\n\n    const editItems = (elementId, elementName) => {\n        updateEditItem(elementId);\n        updateTaskItem(elementName);\n    };\n\n    const handleCheck = (taskName, currentCompleted, taskId) => {\n        firebase.updateTask(taskName, !currentCompleted, taskId).then(data => console.log(data))\n    };\n\n    const handleChange = (stateItem, event) => {\n        switch (stateItem) {\n            case \"taskItem\":\n                return updateTaskItem(event.target.value);\n            case \"showAdd\":\n                return updateShowAdd(event.target.value);\n            default:\n                return console.log(\"Error... no item provided to update\")\n        }\n    };\n\n    const saveEdit = (taskName, currentCompleted, taskId) => {\n        firebase.updateTask(taskName, currentCompleted, taskId).then(data => {\n            updateEditItem(\"\");\n        });\n\n    }\n\n    const addTaskItem = () => {\n        firebase.addTask(taskItem).then(newTasks => console.log(newTasks));\n    }\n\n    const fetchData = () => {\n        updateShowAdd(false);\n    };\n\n\n    useEffect(() => {\n        fetchData();\n    }, [firebase.userData])\n\n    let content = (\n        <Card>\n            <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n                {props.sizeChange.fullScreen.includes(\"tasks\") ?\n                    <FullscreenExit\n                        onClick={() => props.sizeChange.decreaseSize(\"tasks\")} />\n                    :\n                    <Fullscreen\n                        onClick={() => props.sizeChange.increaseSize(\"tasks\")} />\n                }\n            </Box>\n            <CardContent>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        image=\"./images/task_list.jpg\"\n                        title=\"news\"\n                    />\n                </CardActionArea>\n                <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n                    Your Tasks:\n                        </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                    {firebase.userData && firebase.userData.tasks &&\n                        <List> {\n                            firebase.userData.tasks.map(elem => {\n                                return (\n                                    <ListItem key={elem.id} className={classes.listItem} onMouseEnter={() => mouseIn(elem.id)} onMouseLeave={() => mouseOut(elem.id)} >\n                                        {editItem !== elem.id ?\n                                            <>\n                                                <Checkbox checked={elem.completed} onChange={() => { handleCheck(elem.name, elem.completed, elem.id) }} />\n                                                <ListItemText className={checkedItems.includes(elem.id) ? classes.listText : null}>{elem.name}</ListItemText>\n                                            </>\n                                            :\n                                            <Grow in={editItem === elem.id ? true : false} timeout={600}>\n                                                <Grid container alignContent=\"center\">\n                                                    <Grid item sm={12} md={6} lg={6}>\n                                                        <FormControl>\n                                                            <Input aria-describedby=\"add task\" value={taskItem} onChange={(e) => handleChange(\"taskItem\", e)} />\n                                                        </FormControl>\n                                                    </Grid>\n                                                    <Grid item sm={12} md={6} lg={6}>\n                                                        <Button\n                                                            disabled={taskItem ? false : true}\n                                                            className={classes.addButton}\n                                                            size=\"small\" onClick={() => saveEdit(taskItem, elem.completed, elem.id)}\n                                                            aria-label=\"submit add task\">\n                                                            Save</Button>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grow>\n                                        }\n                                        <>\n                                            <Button\n                                                className={classes.editButton}\n                                                style={hoverVis !== elem.id ? { visibility: \"hidden\" } : { visibility: \"visible\" }}\n                                                onClick={() => editItems(elem.id, elem.name)}>\n                                                Edit</Button>\n\n                                            <Button\n                                                className={classes.deleteButton}\n                                                style={hoverVis !== elem.id ? { visibility: \"hidden\" } : { visibility: \"visible\" }}\n                                                onClick={() => deleteItem(elem.id)}>\n                                                Delete</Button>\n                                        </>\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    }\n                </Typography>\n            </CardContent>\n            <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n                {firebase.userData ?\n                    <CardActions>\n                        {showAdd ?\n                            <Grow in={showAdd} timeout={600}>\n                                <Grid container alignContent=\"center\">\n                                    <Grid item sm={12} md={6} lg={6}>\n                                        <FormControl>\n                                            <InputLabel htmlFor=\"my-input\">Add Task</InputLabel>\n                                            <Input aria-describedby=\"add task\" onChange={(e) => handleChange(\"taskItem\", e)} />\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item sm={12} md={6} lg={6}>\n                                        <Button\n                                            disabled={taskItem ? false : true}\n                                            className={classes.addButton}\n                                            size=\"small\" onClick={addTaskItem}\n                                            aria-label=\"submit add task\">\n                                            Add</Button>\n                                    </Grid>\n                                </Grid>\n                            </Grow>\n                            : <AddCircle\n                                className={classes.plusIcon}\n                                fontSize=\"large\"\n                                onClick={() => updateShowAdd(true)}\n                                aria-label=\"open add task form\">\n                            </AddCircle>\n                        }\n                    </CardActions>\n                    :\n                    <Typography variant=\"body2\">Create Account or Login to save tasks</Typography>\n                }\n            </Box>\n        </Card>\n    )\n    return content;\n}\n\nexport default Tasks;","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Card, CardContent, Typography, CardActions, Grid, Zoom, Box,\n  Button, CardMedia, CardActionArea, FormControl, InputLabel, Input,\n  Table, TableBody, TableCell, TableHead, TableRow, makeStyles\n} from \"@material-ui/core\";\n\nimport NotificationContext from \"./Context/NotificationContext\";\nimport { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\";\nimport moment from \"moment\";\nimport FirebaseContext from \"./Context/FirebaseContext\";\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\",\n  },\n  table: {\n    maxWidth: \"100%\",\n  },\n  icon: {\n    margin: \"0.5rem 0.5rem 0 0\",\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n}));\n\n\n\nconst Weather = (props) => {\n\n  const firebase = useContext(FirebaseContext);\n\n  const classes = useStyles();\n\n  const [search, updateSearch] = useState(\"\");\n\n  const [weather, updateWeather] = useState()\n\n  const handleChange = (event) => {\n    updateSearch(event.currentTarget.value)\n  }\n\n  const [state, notificationDispatch] = useContext(NotificationContext);\n\n  const fetchData = () => {\n    let url = \"/api/weather\";\n    if (search === \"\") {\n      notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a valid zip code\" } })\n    } else if (search.length > 5 || search.length < 5) {\n      notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a 5 digit zip code\" } })\n    }\n    else {\n      firebase.user && firebase.updateSearchData(\"weather\", search);\n      props.getInfo(url, { zip: search }).then(weather => {\n        updateWeather(weather.data.daily.data);\n      })\n    }\n  };\n\n  useEffect(() => {\n    firebase.userData && props.getInfo(\"/api/weather\", { zip: firebase.userData.weather })\n      .then(weather => { console.log(weather.data); updateWeather(weather.data.daily.data) }).catch(err => console.log(err));\n  }, [firebase.userData]);\n\n  //component layout\n  let content = (\n    <Card>\n      <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n        {props.sizeChange.fullScreen.includes(\"weather\") ?\n          <FullscreenExit\n            onClick={() => props.sizeChange.decreaseSize(\"weather\")} />\n          :\n          <Fullscreen\n            onClick={() => props.sizeChange.increaseSize(\"weather\")} />\n        }\n      </Box>\n      <CardContent>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            image=\"./images/weather.jpg\"\n            title=\"weather\"\n          />\n        </CardActionArea>\n        <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n          The Weather\n        </Typography>\n        <Box container=\"true\" alignItems=\"center\">\n          {weather &&\n            <Zoom in={weather ? true : false} timeout={600}>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>High</TableCell>\n                    <TableCell>Low</TableCell>\n                    <TableCell>Summary</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {weather.map((day) => {\n                    return (\n                      <TableRow key={day.time}>\n                        <TableCell>{moment(day.time, \"X\").format(\"MMMM Do\")}</TableCell>\n                        <TableCell>{day.apparentTemperatureHigh}F</TableCell>\n                        <TableCell>{day.apparentTemperatureLow}F</TableCell>\n                        <TableCell>{day.summary}</TableCell>\n                      </TableRow>\n                    )\n                  })}\n                </TableBody>\n              </Table>\n            </Zoom>\n          }\n        </Box>\n      </CardContent>\n      <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n        <CardActions>\n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Weather by zip code</InputLabel>\n            <Input id=\"my-input\" aria-describedby=\"search for weather\" value={search} onChange={handleChange} />\n          </FormControl>\n          <Button size=\"large\" onClick={fetchData}>Get Weather</Button>\n        </CardActions>\n      </Box>\n    </Card>\n  )\n  return content;\n\n}\n\nexport default Weather;","import React, { useState } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport axios from 'axios'\nimport News from './News';\nimport Stocks from './Stocks';\nimport Tasks from './Tasks';\nimport Weather from './Weather';\n\n\nconst Controller = props => {\n\n    const [screenSize, updateScreenSize] = useState(window.innerWidth);\n\n    window.addEventListener(\"resize\", function () {\n        window.innerWidth > 959 ? updateScreenSize(\"large\") : updateScreenSize(\"small\");\n    })\n\n    const apiPost = (route, data) => {\n        return axios.post(route, data);\n    };\n\n    const [fullScreen, updateFullScreen] = useState([null]);\n\n    const increaseSize = (item) => {\n        updateFullScreen([...fullScreen, item]);\n    };\n\n    const decreaseSize = (item) => {\n        let filtered = fullScreen.filter(elem => elem !== item);\n        updateFullScreen(filtered);\n    };\n\n    let content = (\n        <Grid\n            container\n            spacing={screenSize === \"large\" ? 2 : 0}\n        >\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"news\") ? 12 : 6}\n                lg={fullScreen.includes(\"news\") ? 12 : 6}\n            >\n                <News getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} />\n            </Grid>\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"weather\") ? 12 : 6}\n                lg={fullScreen.includes(\"weather\") ? 12 : 6}\n            >\n                <Weather getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} />\n            </Grid>\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"stocks\") ? 12 : 6}\n                lg={fullScreen.includes(\"stocks\") ? 12 : 6}\n            >\n                <Stocks getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} />\n            </Grid>\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"tasks\") ? 12 : 6}\n                lg={fullScreen.includes(\"tasks\") ? 12 : 6}\n            >\n                <Tasks getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} />\n            </Grid>\n        </Grid>\n    )\n    return content;\n}\n\nexport default Controller;","import React, { useContext } from 'react';\nimport { Snackbar } from \"@material-ui/core\";\nimport NotificationContext from \"./Context/NotificationContext\";\nimport { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\"\n\nconst NotificationSnackbar = (props) => {\n\nconst [state, stateDispatch] = useContext(NotificationContext);\n\n    let content = (\n        <> {state &&\n        <Snackbar\n            open={state.notification.open}\n            onClose={() => stateDispatch({type: UPDATE_NOTIFICATION, notification: {open: false, message: \"\"}})}\n            autoHideDuration={3000}\n            message={state.notification.message}\n            >\n        </Snackbar>\n        }\n        </>\n    )\n\n    return content;\n\n}\n\nexport default NotificationSnackbar;","import React, { useContext, useReducer, useEffect } from \"react\";\nimport NotificationsContext from \"./Context/NotificationContext\";\nimport NotificationsReducer, { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\";\nimport NotificationContext from \"./Context/NotificationContext\"\n\nconst NotificationProvider = (props) => {\n\nconst defaultState = useContext(NotificationContext);\n\nconst [state, notificationDispatch] = useReducer(NotificationsReducer, defaultState);\n\n    return (\n        <NotificationsContext.Provider value={[state, notificationDispatch]}>\n            {props.children}\n        </NotificationsContext.Provider>\n    );\n\n};\n\nexport default NotificationProvider;","import React, { useState, useEffect } from \"react\";\n// import NotificationsContext from \"./Context/NotificationContext\";\n// import NotificationsReducer, { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\";\nimport FirebaseContext from \"./Context/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firebase-firestore\";\nimport \"firebase/auth\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCNj-zPSwifJfaluXLT7ZlPepFqD9dJn14\",\n    authDomain: \"daily-dash-1553976444540.firebaseapp.com\",\n    databaseURL: \"https://daily-dash-1553976444540.firebaseio.com\",\n    projectId: \"daily-dash-1553976444540\",\n    storageBucket: \"daily-dash-1553976444540.appspot.com\",\n    messagingSenderId: \"328742274675\",\n    appId: \"1:328742274675:web:ade0772859ba511e\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nlet userId;\n// firebase.auth().\n// db.collection(\"users\").where(\"email\", \"==\", \"mtfear@hotmail.com\").get().then(users => { return users.length > 1 ? \"Error too many results\" : console.log(users.docs[0].id) });\n\n// const user = db.collection(\"users\");\n\nconst FirebaseProvider = (props) => {\n\n    const [taskData, updateTaskData] = useState();\n\n    const [stockData, updateStockData] = useState();\n\n    const [locationData, updateLocationData] = useState();\n\n    const [newsData, updateNewsData] = useState();\n\n    const [userData, updateUserData] = useState();\n\n    const [user, updateUser] = useState(null);\n\n    const addTask = (task) => {\n        console.log(task);\n        return db.collection(\"users\").doc(user.uid).collection(\"todos\").add({ name: task, completed: false });\n    };\n\n    const updateTask = (task, completed, taskId) => {\n        return db.collection(\"users\").doc(user.uid).collection(\"todos\").doc(taskId).update({ name: task, completed: completed });\n    };\n\n    const deleteTask = (taskId) => {\n        return db.collection(\"users\").doc(user.uid).collection(\"todos\").doc(taskId).delete();\n    };\n\n    const signIn = (email, password) => {\n        return firebase.auth().signInWithEmailAndPassword(email, password);\n    };\n\n    const createAccount = (email, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(email, password);\n    };\n\n    const updateSearchData = (key, value) => {\n        switch (key) {\n            case \"weather\":\n                db.collection(\"users\").doc(user.uid).update({ \"weather\": value }).then((data) => console.log(data));\n                break;\n            case \"news\":\n                db.collection(\"users\").doc(user.uid).update({ \"news\": value }).then((data) => console.log(data));\n                break;\n            case \"stocks\":\n                db.collection(\"users\").doc(user.uid).update({ \"stocks\": value }).then((data) => console.log(data));\n                break;\n        }\n    }\n\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                // updateUser(user);\n                db.collection(\"users\").doc(user.uid).get().then(userData => {\n                    let name = `${userData.data().firstName} ${userData.data().lastName}`;\n                    let userInfo = userData.data();\n                    let userWithName = { ...user, name, userInfo }\n                    updateUser(userWithName);\n                });\n                db.collection(\"users\").doc(user.uid).onSnapshot(doc => {\n                    updateUserData(doc.data());\n                });\n                db.collection(\"users\").doc(user.uid).collection(\"todos\").onSnapshot(todos => {\n                    let todoList = [];\n                    todos.forEach(todoItem => {\n                        let todo = { id: todoItem.id, ...todoItem.data() };\n                        todoList.push(todo);\n                    });\n                    updateUserData(prev => { return { ...prev, tasks: todoList } });\n\n                });\n            } else {\n                updateUser(null);\n            }\n        });\n    }, []);\n\n    const addUser = (uid, data) => {\n        db.collection(\"users\").doc(uid).set(data).then(newUser => {\n        });\n    };\n\n    const signOut = () => {\n        updateUser(null);\n        updateUserData(null);\n        firebase.auth().signOut().then(() => {\n            window.location.reload();\n        });\n    };\n\n    let state = {\n        updateSearchData: updateSearchData,\n        userData: userData,\n        tasks: taskData,\n        stocks: stockData,\n        location: locationData,\n        news: newsData,\n        addTask: addTask,\n        deleteTask: deleteTask,\n        updateTask: updateTask,\n        signIn: signIn,\n        createAccount: createAccount,\n        user: user,\n        signOut: signOut,\n        addUser: addUser,\n    }\n\n    return (\n        <FirebaseContext.Provider value={state}>\n            {props.children}\n        </FirebaseContext.Provider>\n    );\n\n};\n\nexport default FirebaseProvider;","import React from 'react';\nimport './App.css';\nimport Nav from './Components/Nav';\nimport Footer from \"./Components/Footer\";\nimport Controller from './Components/Controller';\nimport NotificationSnackbar from \"./Components/NotificationSnackbar\";\nimport NotificationProvider from \"./Components/NotificationProvider\"\nimport { Box } from \"@material-ui/core\";\nimport FirebaseProvider from \"./Components/FirebaseProvider\";\n\n// const SnackContext = createContext(\"snack\");\n\nfunction App() {\n\n  return (\n    <NotificationProvider>\n      <FirebaseProvider>\n        <Nav />\n        <Box>\n          <Controller />\n          <NotificationSnackbar />\n        </Box>\n      </FirebaseProvider>\n      <Footer />\n    </NotificationProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}