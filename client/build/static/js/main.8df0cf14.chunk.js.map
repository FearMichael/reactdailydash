{"version":3,"sources":["Components/Context/FirebaseContext.js","Components/FormUtil.js","Components/SignIn.js","Components/Nav.js","Components/Footer.js","Components/Context/NotificationContext.js","Components/Reducers/NotificationsReducer.js","Components/NewsItem.js","Components/News.js","Components/Stocks.js","Components/Tasks.js","Components/Weather.js","Components/Controller.js","Components/NotificationSnackbar.js","Components/NotificationProvider.js","Components/FirebaseProvider.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","FormUtil","_ref","children","submit","react_default","a","createElement","onKeyPress","e","which","useStyles","makeStyles","paper","backgroundColor","padding","textAlign","display","justifyContent","formContent","margin","fontSize","width","buttons","SignIn","props","firebaseAuth","useContext","FirebaseProvider","classes","_useState","useState","_useState2","Object","slicedToArray","showForm","updateShowForm","_useState3","_useState4","loginType","updateLoginType","_useState5","_useState6","firstName","updateFirstName","_useState7","_useState8","lastName","updateLastName","_useState9","_useState10","email","updateEmail","_useState11","_useState12","password","updatePassword","_useState13","_useState14","loggingIn","updateLoggingIn","_useState15","_useState16","error","updateError","selectLogin","loginSelect","console","log","formSignIn","emailInput","passwordInput","signIn","then","data","modalReset","catch","err","message","formCreateAccount","createAccount","addUser","user","uid","profilePic","weather","news","stocks","closeModal","Dialog","aria-labelledby","aria-describedby","open","formOpen","onClose","ClickAwayListener","onClickAway","DialogContent","className","Box","Button","onClick","Components_FormUtil","Fragment","FormControl","fullWidth","Input","inputComponent","label","placeholder","onChange","event","target","value","type","Autorenew_default","Typography","style","color","theme","root","flexGrow","menuButton","marginRight","spacing","title","marginLeft","appBar","uploadButton","Nav","modal","updateModal","upload","updateUpload","file","updateFile","AppBar","position","Toolbar","IconButton","edge","aria-label","Grid","container","item","sm","Avatar","alt","src","userData","variant","name","encType","preventDefault","formData","FormData","append","files","axios","post","uploadData","addProfilePic","disabled","signOut","Components_SignIn","footer","marginTop","height","icon","Footer","alignItems","Copyright_default","NotificationContext","NotificationsReducer","state","action","objectSpread","notification","NewsItem","alignContent","md","CardMedia","component","image","Link","rel","underline","href","url","my","date","mb","content","dividerStyle","marginBottom","buttonStyle","&:hover","cursor","News","firebase","search","updateSearch","updateNews","newsToShow","updateNewsToShow","notificationDispatch","useEffect","getInfo","newsData","articles","length","sortedNews","sort","b","moment","publishedAt","format","Card","flexDirection","sizeChange","fullScreen","includes","FullscreenExit_default","decreaseSize","Fullscreen_default","increaseSize","CardContent","CardActionArea","slice","map","newsItem","i","key","Components_NewsItem","urlToImage","fromNow","Divider","size","InputLabel","htmlFor","updateSearchData","red","green","Stocks","anchorEl","updateAnchorEl","updateStocks","autoCompleteList","updateAutoCompleteList","percentRemover","toString","fetchAutoComplete","listData","stock","defaultKeyStatistics","profitMargins","fmt","concat","summaryDetail","previousClose","regularMarketOpen","parseFloat","toFixed","summaryProfile","sector","symbol","toUpperCase","CardActions","currentTarget","debounce","Popper","Paper","square","elem","MenuItem","stockData","addButton","background","boxShadow","plusIcon","borderRadius","deleteButton","listItem","listText","textDecoration","invisible","visibility","Tasks","taskItem","updateTaskItem","hoverVis","updateHoverVis","showAdd","updateShowAdd","editItem","updateEditItem","handleChange","stateItem","tasks","List","ListItem","id","onMouseEnter","identifier","onMouseLeave","Checkbox","checked","completed","taskName","currentCompleted","taskId","updateTask","ListItemText","Grow","in","timeout","lg","editButton","elementId","elementName","deleteTask","addTask","AddCircle","maxWidth","Weather","updateWeather","weatherLocation","updateWeatherLocation","zip","zipCodeCityName","daily","Zoom","Table","TableHead","TableRow","TableCell","rawScreenSize","TableBody","screenSize","day","time","apparentTemperatureHigh","apparentTemperatureLow","summary","Controller","window","innerWidth","updateScreenSize","updateRawScreenSize","addEventListener","apiPost","route","updateFullScreen","toConsumableArray","filtered","filter","Components_News","Components_Weather","Components_Stocks","Components_Tasks","NotificationSnackbar","_useContext","_useContext2","stateDispatch","Snackbar","autoHideDuration","NotificationProvider","defaultState","_useReducer","useReducer","_useReducer2","Context_NotificationContext","Provider","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","updateUserData","updateUser","auth","onAuthStateChanged","collection","doc","get","userInfo","userWithName","onSnapshot","todos","todoList","forEach","todoItem","todo","push","prev","update","task","add","delete","signInWithEmailAndPassword","createUserWithEmailAndPassword","location","reload","set","newUser","Context_FirebaseContext","App","Components_NotificationProvider","Components_FirebaseProvider","Components_Nav","Components_Controller","Components_NotificationSnackbar","Components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8df0cf14.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FirebaseContext = React.createContext();\n\nexport default FirebaseContext;","import React from \"react\";\n\n\nconst FormUtil = ({ children, submit }) => {\n\n    const handleSubmit = (e) => {\n        if (e.which === 13) {\n            submit();\n        }\n    }\n    return (\n        <form onKeyPress={handleSubmit}>\n            {children}\n        </form>\n    )\n};\n\nexport default FormUtil;","import React, { useState, useContext } from \"react\";\nimport { Dialog, DialogContent, Input, Box, FormControl, Button, makeStyles, ClickAwayListener, Typography } from \"@material-ui/core\";\nimport Autorenew from \"@material-ui/icons/Autorenew\"\nimport FirebaseProvider from \"./Context/FirebaseContext\";\nimport FormUtil from \"./FormUtil\";\n\nconst useStyles = makeStyles(() => ({\n    paper: {\n        backgroundColor: \"white\",\n        padding: \"2rem\",\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    formContent: {\n        margin: \"2rem auto\",\n        textAlign: \"center\",\n        fontSize: \"2rem\",\n        width: \"100%\"\n    },\n    buttons: {\n        margin: \"0 auto\"\n    }\n}));\n\n// const RefComp = React.forwardRef((props, ref) => <div ref={ref}> {props.children} </div>);\n\nconst SignIn = (props) => {\n\n    // const ref = React.createRef();\n\n    const firebaseAuth = useContext(FirebaseProvider);\n\n    const classes = useStyles();\n\n    const [showForm, updateShowForm] = useState(false);\n\n    const [loginType, updateLoginType] = useState(null)\n\n    const [firstName, updateFirstName] = useState(\"\");\n\n    const [lastName, updateLastName] = useState(\"\");\n\n    const [email, updateEmail] = useState(\"\");\n\n    const [password, updatePassword] = useState(\"\");\n\n    const [loggingIn, updateLoggingIn] = useState(false);\n\n    const [error, updateError] = useState(null);\n\n    const selectLogin = (loginSelect) => {\n        updateShowForm(true)\n        if (loginSelect === \"create\") {\n            updateLoginType(\"create\")\n        } else if (loginSelect === \"signin\") {\n            updateLoginType(\"signin\")\n        } else {\n            console.log(\"Login type not available\")\n        }\n    }\n\n    const formSignIn = (emailInput, passwordInput) => {\n        updateLoggingIn(true)\n        firebaseAuth.signIn(emailInput, passwordInput).then(data => {\n            if (data) {\n                updateError(null);\n                modalReset()\n            };\n        }).catch(err => { updateError(err.message); updateLoggingIn(false); });\n    };\n\n    const formCreateAccount = (emailInput, passwordInput) => {\n        updateLoggingIn(true)\n        firebaseAuth.createAccount(emailInput, passwordInput).then(data => {\n            if (data) {\n                updateError(null);\n                firebaseAuth.addUser(data.user.uid, {\n                    firstName: firstName,\n                    lastName: lastName,\n                    profilePic: null,\n                    weather: null,\n                    news: null,\n                    stocks: null\n                })\n                modalReset()\n            }\n\n        }).catch(err => { updateError(err.message); updateLoggingIn(false); });\n    };\n\n    const modalReset = () => {\n        props.closeModal();\n        updateLoggingIn(false);\n        updateLoginType(null);\n        updateShowForm(false);\n        updatePassword(\"\");\n        updateEmail(\"\");\n        updateFirstName(\"\");\n        updateLastName(\"\");\n    }\n    const determineLogin = () => {\n        if (loginType === \"signin\") {\n            return formSignIn(email, password);\n        } else if (loginType === \"create\") {\n            return formCreateAccount(email, password);\n        }\n    }\n\n    const handleEmailChange = (event) => {\n        updateEmail(event.target.value)\n    };\n    const handlePasswordChange = (event) => {\n        updatePassword(event.target.value)\n    };\n\n    const firstNameChange = (event) => {\n        updateFirstName(event.target.value);\n    }\n\n    const lastNameChange = (event) => {\n        updateLastName(event.target.value);\n    }\n    let content = (\n        <Dialog\n            // style={{ top: \"10%\", margin: \"auto\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"0\" }}\n            aria-labelledby=\"sign-in-form\"\n            aria-describedby=\"use-this-form-to-sign-in\"\n            open={props.formOpen}\n            onClose={() => updateShowForm(false)}\n        >\n            <ClickAwayListener onClickAway={modalReset} >\n                <DialogContent className={classes.paper} >\n                    {!showForm &&\n                        <Box display=\"flex\" justifyContent=\"center\">\n                            <Button onClick={() => selectLogin(\"create\")}>Create Account</Button>\n                            <Button onClick={() => selectLogin(\"signin\")}>Sign In</Button>\n                        </Box>\n                    }\n                    {showForm &&\n                        <FormUtil submit={determineLogin} >\n                            {loginType === \"create\" &&\n                                <>\n                                    <FormControl fullWidth={true}>\n                                        <Input\n                                            inputComponent=\"input\"\n                                            label=\"First Name\"\n                                            placeholder=\"First Name\"\n                                            // value={email}\n                                            fullWidth={true}\n                                            onChange={firstNameChange}\n                                        />\n                                    </FormControl>\n                                    <FormControl fullWidth={true}>\n                                        <Input\n                                            inputComponent=\"input\"\n                                            label=\"Last Name\"\n                                            placeholder=\"Last Name\"\n                                            fullWidth={true}\n                                            // value={email}\n                                            onChange={lastNameChange}\n                                        />\n                                    </FormControl>\n                                </>\n                            }\n                            <FormControl fullWidth={true}>\n                                <Input\n                                    inputComponent=\"input\"\n                                    label=\"Email\"\n                                    placeholder=\"Email\"\n                                    fullWidth={true}\n                                    value={email}\n                                    onChange={handleEmailChange}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth={true}>\n\n                                <Input\n                                    inputComponent=\"input\"\n                                    label=\"Password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    fullWidth={true}\n                                    value={password}\n                                    onChange={handlePasswordChange}\n                                />\n                            </FormControl >\n                            {loggingIn &&\n                                <Box display=\"flex\" justifyContent=\"center\">\n                                    <Autorenew className=\"loadingIcon\" />\n                                </Box>\n                            }\n                            <Box display=\"flex\" justifyContent=\"center\">\n                                {loginType === \"signin\" && <Button onClick={() => formSignIn(email, password)}>Sign In</Button>}\n                                {loginType === \"create\" && <Button onClick={() => formCreateAccount(email, password)}>Create Account</Button>}\n                            </Box>\n                            <Box display=\"flex\" justifyContent=\"center\">\n                                {error && <Typography style={{ color: \"red\", textAlign: \"center\" }}>{error}</Typography>}\n                            </Box>\n                        </FormUtil>\n                    }\n                </DialogContent>\n            </ClickAwayListener>\n        </Dialog >\n    )\n    return content;\n}\n\nexport default SignIn;","import React, { useContext, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SignIn from \"./SignIn\";\nimport FirebaseProvider from \"./Context/FirebaseContext\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\"\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: \"1rem\"\n  },\n  appBar: {\n    backgroundColor: \"#455766\",\n    padding: \"0.5rem 0\"\n  },\n  uploadButton: {\n    backgroundColor: \"white\",\n    padding: \"0.25rem\"\n  }\n}));\n\nconst Nav = (props) => {\n\n  const firebaseAuth = useContext(FirebaseProvider);\n\n  const classes = useStyles();\n\n  // const [user, updateUser] = useState(null)\n\n  const [modal, updateModal] = useState(false);\n\n  const [upload, updateUpload] = useState(false);\n\n  const [file, updateFile] = useState(null);\n\n  const showUpload = () => {\n    updateUpload(!upload);\n  };\n\n  const picToSend = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"file\", e.target.files[0]);\n    updateFile(formData);\n  }\n\n  const uploadPicture = () => {\n    axios.post(\"/api/imageupload\", file)\n      .then(uploadData => {\n        firebaseAuth.addProfilePic(uploadData.data).then(data => data && updateUpload(false)).catch(err => console.log(\"Error add profile picture to database\", err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  const openModal = () => {\n    updateModal(true)\n  };\n\n  const closeModal = () => {\n    updateModal(false);\n  };\n\n  let content = (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"Menu\">\n          </IconButton>\n          <Grid container style={{ width: \"70%\" }}>\n            <Grid item sm={1}>\n              <Avatar alt=\"avatar\" src={(firebaseAuth.userData && firebaseAuth.userData.profilePic) || \"./images/avatarDefault.jpg\"} onClick={showUpload} />\n            </Grid>\n            <Grid item sm={4}>\n\n              <Typography variant=\"h6\">\n                {firebaseAuth.user && firebaseAuth.user.name}\n              </Typography>\n\n              {upload &&\n                <Box>\n                  <input type=\"file\" encType=\"multipart/form-data\" onChange={picToSend} name=\"file\" />\n                  <Button className={classes.uploadButton} onClick={uploadPicture} disabled={file ? false : true}>Upload</Button>\n                </Box>\n              }\n\n            </Grid>\n          </Grid>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n\n            {firebaseAuth.user ?\n              <Button color=\"inherit\" onClick={firebaseAuth.signOut}>Sign Out</Button>\n              :\n              <Button color=\"inherit\" onClick={openModal}>Sign In</Button>\n            }\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <SignIn formOpen={modal} closeModal={closeModal} />\n    </div>\n  )\n  return content;\n}\n\nexport default Nav;","import React from 'react';\n\nimport { makeStyles, Box, Typography } from \"@material-ui/core\";\nimport Copyright from \"@material-ui/icons/Copyright\";\n\nconst useStyles = makeStyles({\n    footer: {\n        marginTop: \"2rem\",\n        backgroundColor: \"#455766\",\n        color: \"rgb(240,240,240)\",\n        height: \"2rem\",\n        padding: \"0.5rem\",\n    },\n    icon: {\n        margin: \"auto 0.5rem\"\n    }\n})\n\nfunction Footer(props) {\n\n    const classes = useStyles();\n\n    return (\n        <footer className={classes.footer}>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" textAlign=\"center\">\n                <Typography variant=\"h5\" display=\"inline\">Daily Dash</Typography> <Copyright className={classes.icon} />\n            </Box>\n        </footer>\n    )\n\n}\n\nexport default Footer;","import React from \"react\";\n\nconst NotificationContext = React.createContext()\n\nexport default NotificationContext;","export const UPDATE_NOTIFICATION = \"UPDATE_NOTIFICATION\"\n\nconst NotificationsReducer = (state, action) => {\n    switch(action.type) {\n        case UPDATE_NOTIFICATION:\n            return {...state, notification: action.notification}\n            \n        default:\n            return state;\n    }\n};\nexport default NotificationsReducer;","import React from 'react';\n\nimport { Link, Grid, CardMedia, Typography, Box } from \"@material-ui/core\";\n\nconst NewsItem = (props) => {\n\n    return (\n        <Grid container spacing={2} alignContent=\"center\" alignItems=\"center\">\n            <Grid item sm={12} md={4}>\n                <CardMedia component=\"img\" src={props.image}></CardMedia>\n            </Grid>\n            <Grid item sm={12} md={8}>\n                <Link\n                    component=\"a\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    underline=\"hover\"\n                    href={props.url}> {props.title} </Link>\n                <Box my={2}><Typography variant=\"body1\" component=\"p\">Published: {props.date} </Typography></Box>\n                <Box mb={2}><Typography variant=\"body1\" component=\"p\">{props.content} </Typography></Box>\n            </Grid>\n        </Grid>\n    )\n\n}\n\nexport default NewsItem;","import React, { useContext, useEffect, useState } from 'react';\n\nimport moment from \"moment\";\n\nimport {\n    Card, CardContent, Typography, Box,\n    Button, CardMedia, CardActionArea, FormControl, InputLabel, Input, Divider\n} from \"@material-ui/core\";\n\nimport NotificationContext from \"./Context/NotificationContext\";\nimport { UPDATE_NOTIFICATION } from './Reducers/NotificationsReducer';\nimport NewsItem from \"./NewsItem\";\nimport FirebaseContext from './Context/FirebaseContext';\nimport { makeStyles } from '@material-ui/styles';\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\n\nconst useStyles = makeStyles({\n    dividerStyle: {\n        marginTop: \"1.5em\",\n        marginBottom: \"1.5em\"\n    },\n    buttonStyle: {\n        justifyContent: \"center\"\n    },\n    icon: {\n        margin: \"0.5rem 0.5rem 0 0\",\n        \"&:hover\": {\n            cursor: \"pointer\"\n        }\n    }\n});\n\nconst News = props => {\n\n    const classes = useStyles();\n\n    const firebase = useContext(FirebaseContext);\n\n    const [search, updateSearch] = useState(\"\");\n\n    const [news, updateNews] = useState();\n\n    const [newsToShow, updateNewsToShow] = useState(3);\n\n    const notificationDispatch = useContext(NotificationContext)[1];\n\n    const showMore = () => {\n        news.length > newsToShow ? updateNewsToShow(newsToShow + 3) : updateNewsToShow(news.length);\n    };\n\n    const handleChange = (event) => {\n        updateSearch(event.target.value);\n    };\n\n    const fetchData = () => {\n\n        let url = \"/api/news\";\n        let data = search;\n        if (search === \"\") {\n            notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a valid search term\" } })\n        } else {\n            firebase.user && firebase.updateSearchData(\"news\", search);\n            props.getInfo(url, { news: data }).then(newsData => {\n                if (newsData.data.articles.length < 1) {\n                    notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Hmm, looks like we couldn't find any news for that search\" } })\n                } else {\n                    let sortedNews = newsData.data.articles.sort(function (a, b) {\n                        return moment(b.publishedAt).format(\"X\") - moment(a.publishedAt).format(\"X\");\n                    });\n                    updateNews(sortedNews);\n                }\n            });\n        }\n    };\n    useEffect(() => {\n        if (firebase.userData && firebase.userData.news) {\n            props.getInfo(\"/api/news\", { news: firebase.userData.news }).then(newsData => {\n                if (newsData.data.articles.length < 1) {\n                    notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Hmm, looks like we couldn't find any news for that search\" } })\n                } else {\n                    let sortedNews = newsData.data.articles.sort(function (a, b) {\n                        return moment(b.publishedAt).format(\"X\") - moment(a.publishedAt).format(\"X\");\n                    });\n                    updateNews(sortedNews);\n                }\n            });\n        }\n    }, [firebase.userData, notificationDispatch]);\n    let content = (\n\n        <Card>\n            <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n                {props.sizeChange.fullScreen.includes(\"news\") ?\n                    <FullscreenExit\n                        onClick={() => props.sizeChange.decreaseSize(\"news\")} />\n                    :\n                    <Fullscreen\n                        onClick={() => props.sizeChange.increaseSize(\"news\")} />\n                }\n            </Box>\n            <CardContent>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        image=\"./images/news.jpg\"\n                        title=\"news\"\n                    />\n                </CardActionArea>\n                <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n                    The News\n                </Typography>\n                {/* <Typography variant=\"body2\" component=\"p\"> */}\n                {news &&\n                    news.slice(0, newsToShow).map((newsItem, i) => {\n                        return (\n                            <div key={i}>\n                                <NewsItem\n                                    alt={newsItem.title}\n                                    image={newsItem.urlToImage}\n                                    title={newsItem.title}\n                                    url={newsItem.url}\n                                    content={newsItem.content}\n                                    date={moment(newsItem.publishedAt).fromNow()}\n                                />\n                                <Divider classes={{ root: classes.dividerStyle }} />\n                            </div>\n                        )\n                    })\n                }\n                {news &&\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Button size=\"small\" onClick={showMore}>Show More</Button>\n                    </Box>\n                }\n\n            </CardContent>\n            <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n                <FormControl>\n                    <InputLabel htmlFor=\"my-input\">News Search</InputLabel>\n                    <Input aria-describedby=\"my-helper-text\" onChange={handleChange} />\n                </FormControl>\n                <Button size=\"large\" onClick={fetchData}>Get News</Button>\n            </Box>\n        </Card>\n    )\n    return content;\n}\n\nexport default News;","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Card, CardContent, Typography, CardActions, Paper, MenuItem, Popper, Box,\n  Button, CardMedia, CardActionArea, FormControl, InputLabel, Input, makeStyles\n} from \"@material-ui/core\";\n\nimport NotificationContext from \"./Context/NotificationContext\";\nimport { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\";\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\nimport FirebaseContext from \"./Context/FirebaseContext\";\n\nimport { debounce } from \"lodash\";\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    margin: \"0.5rem 0.5rem 0 0\",\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  },\n  red: {\n    color: \"#E15554\"\n  },\n  green: {\n    color: \"#3BB273\"\n  }\n}));\n\nconst Stocks = (props) => {\n\n  const firebase = useContext(FirebaseContext);\n\n  const classes = useStyles();\n\n  const [anchorEl, updateAnchorEl] = useState(null);\n\n  // const [debouncedValue] = useDebouncedCallback(() =>)\n\n  //variables\n  const [search, updateSearch] = useState(\"\");\n\n  const [stocks, updateStocks] = useState();\n\n  // const [autoComplete, updateAutoComplete] = useState(\"\");\n\n  const [autoCompleteList, updateAutoCompleteList] = useState();\n\n  const percentRemover = (item) => {\n    return item.toString().slice(0, item.length - 1);\n\n  }\n\n  const handleChange = (event) => {\n    // let searchTimer = null;\n    updateAnchorEl(event.currentTarget);\n    updateSearch(event.currentTarget.value)\n    // updateAutoComplete(event.currentTarget.value);\n    // debounce(fetchAutoComplete, 250);\n    // clearTimeout(searchTimer);\n    debounce(fetchAutoComplete, 300)\n    // searchTimer = setTimeout(fetchAutoComplete, 1000 * 5)\n  };\n\n\n  const notificationDispatch = useContext(NotificationContext)[1];\n\n  //functions\n  const fetchData = () => {\n    let url = \"/api/stocks\";\n    if (search === \"\" || undefined) {\n      notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a valid search term\" } })\n    } else {\n      firebase.userData && firebase.updateSearchData(\"stocks\", search);\n      props.getInfo(url, { stock: search }).then(stockData => {\n        updateStocks(stockData.data);\n        updateAutoCompleteList(null);\n      })\n    }\n  };\n\n  const fetchAutoComplete = () => {\n    let url = \"/api/stockautocomplete\"\n    props.getInfo(url, { search: search }).then(listData => {\n      updateAutoCompleteList(listData.data);\n    })\n  }\n\n  const autoCompleteClick = (item) => {\n    firebase.userData && firebase.updateSearchData(\"stocks\", search);\n    props.getInfo(\"/api/stocks\", { stock: item }).then(stockData => {\n      updateStocks(stockData.data);\n      updateAutoCompleteList(null);\n    })\n  };\n\n  useEffect(() => {\n    if (firebase.userData && firebase.userData.stocks) {\n      let url = \"/api/stocks\"\n      props.getInfo(url, { stock: firebase.userData.stocks }).then(listData => {\n        updateStocks(listData.data);\n      })\n    }\n  }, [firebase.userData]);\n\n  //component layout\n  let content = (\n    <Card>\n      <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n        {props.sizeChange.fullScreen.includes(\"stocks\") ?\n          <FullscreenExit\n            onClick={() => props.sizeChange.decreaseSize(\"stocks\")} />\n          :\n          <Fullscreen\n            onClick={() => props.sizeChange.increaseSize(\"stocks\")} />\n        }\n      </Box>\n      <CardContent>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            image=\"./images/stocks.jpg\"\n            title=\"stocks\"\n          />\n        </CardActionArea>\n        <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n          The Stocks\n        </Typography>\n        {stocks &&\n          <Box className=\"stockData\">\n            {stocks.defaultKeyStatistics.profitMargins ?\n              <Typography\n                className={percentRemover(stocks.defaultKeyStatistics.profitMargins.fmt) > 0 ? `stockData ${classes.green}` : `stockData ${classes.red}`}\n                variant=\"body2\"\n                component=\"p\">\n                Profits: {stocks.defaultKeyStatistics.profitMargins.fmt}\n              </Typography>\n              : <Typography className=\"stockData\" variant=\"body2\" component=\"p\"> Not Available </Typography>}\n\n            {stocks.defaultKeyStatistics[\"52WeekChange\"] ?\n              <Typography\n                className={percentRemover(stocks.defaultKeyStatistics[\"52WeekChange\"].fmt) > 0 ? `stockData ${classes.green}` : `stockData ${classes.red}`}\n                variant=\"body2\"\n                component=\"p\">\n                52 Week Change: {stocks.defaultKeyStatistics[\"52WeekChange\"].fmt}\n              </Typography>\n              : <Typography className=\"stockData\" variant=\"body2\" component=\"p\"> Not Available </Typography>}\n            {stocks.summaryDetail ?\n              <Typography\n                className=\"stockData\"\n                variant=\"body2\"\n                component=\"p\">\n                Previous Closed Value: $ {stocks.summaryDetail.previousClose.fmt}\n              </Typography>\n              : <Typography className=\"stockData\" variant=\"body2\" component=\"p\"> Not Available </Typography>}\n            {stocks.summaryDetail ?\n              <Typography\n                className={stocks.summaryDetail.previousClose.fmt < stocks.summaryDetail.regularMarketOpen.fmt ? `stockData ${classes.green}` : `stockData ${classes.red}`}\n                variant=\"body2\"\n                component=\"p\">\n                Market Open Value: $ {stocks.summaryDetail.regularMarketOpen.fmt}\n              </Typography>\n              : <Typography className=\"stockData\" variant=\"body2\" component=\"p\"> Not Available </Typography>}\n            {stocks.summaryDetail ?\n              <Typography\n                className={stocks.summaryDetail.previousClose.fmt < stocks.summaryDetail.regularMarketOpen.fmt ? `stockData ${classes.green}` : `stockData ${classes.red}`}\n                variant=\"body2\"\n                component=\"p\">\n                Close to Open Differential: $ {parseFloat(stocks.summaryDetail.regularMarketOpen.fmt - stocks.summaryDetail.previousClose.fmt).toFixed(2)}\n              </Typography>\n              : <Typography className=\"stockData\" variant=\"body2\" component=\"p\"> Not Available </Typography>}\n            {stocks.summaryProfile ?\n\n              <Typography\n                className=\"stockData\"\n                variant=\"body2\" component=\"p\">\n                Sector: {stocks.summaryProfile.sector}\n              </Typography>\n\n              : <Typography className=\"stockData\" variant=\"body2\" component=\"p\"> Not Available </Typography>}\n            {stocks.symbol ?\n              <Typography\n                className=\"stockData\"\n                variant=\"body2\" component=\"p\">\n                Symbol: {stocks.symbol.toUpperCase()}\n              </Typography>\n              : <Typography className=\"stockData\" variant=\"body2\" component=\"p\"> Not Available </Typography>}\n\n\n          </Box>\n        }\n      </CardContent>\n      <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n        <CardActions>\n          <FormControl >\n            <InputLabel htmlFor=\"my-input\">Check Stocks</InputLabel>\n            <Input fullWidth={true} aria-describedby=\"search for Stocks!\" value={search} onChange={handleChange} />\n            {autoCompleteList &&\n              <Popper anchorEl={anchorEl} open={autoCompleteList ? true : false}>\n                <Paper square>{\n                  autoCompleteList.map(elem => {\n                    return <MenuItem key={elem.symbol} onClick={() => autoCompleteClick(elem.symbol)}>{elem.symbol}</MenuItem>\n                  })}\n                </Paper>\n              </Popper>\n            }\n          </FormControl>\n          <Button size=\"large\" onClick={fetchData}>Get Stocks</Button>\n        </CardActions>\n      </Box>\n    </Card>\n  )\n  return content;\n}\n\nexport default Stocks;","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    Card, CardContent, Typography, CardActions, Grid, Grow, Checkbox, Box, List, ListItem, ListItemText,\n    Button, CardMedia, CardActionArea, FormControl, InputLabel, Input\n} from \"@material-ui/core\";\nimport { AddCircle } from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport FirebaseContext from './Context/FirebaseContext';\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\n\nconst coolGreen = \"linear-gradient(45deg, #8CD790 30%, #AAFCB8 90%)\"\nconst useStyles = makeStyles({\n    addButton: {\n        background: coolGreen,\n        margin: \"1rem, 1rem, 0, 0\",\n        \"&:hover\": {\n            boxShadow: \"0 0 0.5rem 0.25rem #6D676E\"\n        }\n    },\n    plusIcon: {\n        margin: \"0 auto\",\n        color: \"#8CD790\",\n        \"&:hover\": {\n            cursor: \"pointer\",\n            backgroundColor: \"#6D676E\",\n            borderRadius: \"25%\"\n        }\n    },\n    deleteButton: {\n        color: \"#C41E3D\"\n    },\n    listItem: {\n        \"&:hover\": {\n            backgroundColor: \"#E1E1E1\"\n        }\n    },\n    listText: {\n        textDecoration: \"line-through\"\n    },\n    invisible: {\n        visibility: \"hidden\"\n    },\n    icon: {\n        margin: \"0.5rem 0.5rem 0 0\",\n        \"&:hover\": {\n            cursor: \"pointer\"\n        }\n    }\n});\n\n\nconst Tasks = props => {\n\n    const classes = useStyles();\n\n    const firebase = useContext(FirebaseContext);\n\n    const [taskItem, updateTaskItem] = useState();\n\n    const [hoverVis, updateHoverVis] = useState(\"\");\n\n    const [showAdd, updateShowAdd] = useState(true);\n\n    const [editItem, updateEditItem] = useState(\"\");\n\n    const mouseIn = (identifier) => {\n        updateHoverVis(identifier.toString())\n    };\n\n    const mouseOut = (identifier) => {\n        updateHoverVis(\"\")\n    };\n\n    const deleteItem = (taskId) => {\n        firebase.deleteTask(taskId).then().catch(err => console.log(err));\n    };\n\n    const editItems = (elementId, elementName) => {\n        updateEditItem(elementId);\n        updateTaskItem(elementName);\n    };\n\n    const handleCheck = (taskName, currentCompleted, taskId) => {\n        firebase.updateTask(taskName, !currentCompleted, taskId).then().catch(err => console.log(err));\n    };\n\n    const handleChange = (stateItem, event) => {\n        switch (stateItem) {\n            case \"taskItem\":\n                return updateTaskItem(event.target.value);\n            case \"showAdd\":\n                return updateShowAdd(event.target.value);\n            default:\n                return console.log(\"Error... no item provided to update\")\n        }\n    };\n\n    const saveEdit = (taskName, currentCompleted, taskId) => {\n        firebase.updateTask(taskName, currentCompleted, taskId).then(data => {\n            updateEditItem(\"\");\n        });\n\n    }\n\n    const addTaskItem = () => {\n        firebase.addTask(taskItem).then().catch(err => console.log(err));\n    }\n\n    const fetchData = () => {\n        updateShowAdd(false);\n    };\n\n\n    useEffect(() => {\n        fetchData();\n    }, [firebase.userData])\n\n    let content = (\n        <Card>\n            <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n                {props.sizeChange.fullScreen.includes(\"tasks\") ?\n                    <FullscreenExit\n                        onClick={() => props.sizeChange.decreaseSize(\"tasks\")} />\n                    :\n                    <Fullscreen\n                        onClick={() => props.sizeChange.increaseSize(\"tasks\")} />\n                }\n            </Box>\n            <CardContent>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        image=\"./images/task_list.jpg\"\n                        title=\"news\"\n                    />\n                </CardActionArea>\n                <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n                    Your Tasks:\n                        </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                    {firebase.userData && firebase.userData.tasks &&\n                        <List> {\n                            firebase.userData.tasks.map(elem => {\n                                return (\n                                    <ListItem key={elem.id} className={classes.listItem} onMouseEnter={() => mouseIn(elem.id)} onMouseLeave={() => mouseOut(elem.id)} >\n                                        {editItem !== elem.id ?\n                                            <>\n                                                <Checkbox checked={elem.completed} onChange={() => { handleCheck(elem.name, elem.completed, elem.id) }} />\n                                                <ListItemText className={elem.completed && classes.listText}>{elem.name}</ListItemText>\n                                            </>\n                                            :\n                                            <Grow in={editItem === elem.id ? true : false} timeout={600}>\n                                                <Grid container alignContent=\"center\">\n                                                    <Grid item sm={12} md={6} lg={6}>\n                                                        <FormControl>\n                                                            <Input aria-describedby=\"add task\" value={taskItem} onChange={(e) => handleChange(\"taskItem\", e)} />\n                                                        </FormControl>\n                                                    </Grid>\n                                                    <Grid item sm={12} md={6} lg={6}>\n                                                        <Button\n                                                            disabled={taskItem ? false : true}\n                                                            className={classes.addButton}\n                                                            size=\"small\" onClick={() => saveEdit(taskItem, elem.completed, elem.id)}\n                                                            aria-label=\"submit add task\">\n                                                            Save</Button>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grow>\n                                        }\n                                        <>\n                                            <Button\n                                                className={classes.editButton}\n                                                style={hoverVis !== elem.id ? { visibility: \"hidden\" } : { visibility: \"visible\" }}\n                                                onClick={() => editItems(elem.id, elem.name)}>\n                                                Edit</Button>\n\n                                            <Button\n                                                className={classes.deleteButton}\n                                                style={hoverVis !== elem.id ? { visibility: \"hidden\" } : { visibility: \"visible\" }}\n                                                onClick={() => deleteItem(elem.id)}>\n                                                Delete</Button>\n                                        </>\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    }\n                </Typography>\n            </CardContent>\n            <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n                {firebase.userData ?\n                    <CardActions>\n                        {showAdd ?\n                            <Grow in={showAdd} timeout={600}>\n                                <Grid container alignContent=\"center\">\n                                    <Grid item sm={12} md={6} lg={6}>\n                                        <FormControl>\n                                            <InputLabel htmlFor=\"my-input\">Add Task</InputLabel>\n                                            <Input aria-describedby=\"add task\" onChange={(e) => handleChange(\"taskItem\", e)} />\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item sm={12} md={6} lg={6}>\n                                        <Button\n                                            disabled={taskItem ? false : true}\n                                            className={classes.addButton}\n                                            size=\"small\" onClick={addTaskItem}\n                                            aria-label=\"submit add task\">\n                                            Add</Button>\n                                    </Grid>\n                                </Grid>\n                            </Grow>\n                            : <AddCircle\n                                className={classes.plusIcon}\n                                fontSize=\"large\"\n                                onClick={() => updateShowAdd(true)}\n                                aria-label=\"open add task form\">\n                            </AddCircle>\n                        }\n                    </CardActions>\n                    :\n                    <Typography variant=\"body2\">Create Account or Login to save tasks</Typography>\n                }\n            </Box>\n        </Card>\n    )\n    return content;\n}\n\nexport default Tasks;","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Card, CardContent, Typography, CardActions, Zoom, Box,\n  Button, CardMedia, CardActionArea, FormControl, InputLabel, Input,\n  Table, TableBody, TableCell, TableHead, TableRow, makeStyles\n} from \"@material-ui/core\";\n\nimport NotificationContext from \"./Context/NotificationContext\";\nimport { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\";\nimport moment from \"moment\";\nimport FirebaseContext from \"./Context/FirebaseContext\";\nimport Fullscreen from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\",\n  },\n  icon: {\n    margin: \"0.5rem 0.5rem 0 0\",\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n}));\n\n\n\nconst Weather = (props) => {\n\n  const firebase = useContext(FirebaseContext);\n\n  const classes = useStyles();\n\n  const [search, updateSearch] = useState(\"\");\n\n  const [weather, updateWeather] = useState();\n\n  const [weatherLocation, updateWeatherLocation] = useState(null);\n\n  const handleChange = (event) => {\n    updateSearch(event.currentTarget.value)\n  }\n\n  const notificationDispatch = useContext(NotificationContext)[1];\n\n  const fetchData = () => {\n    let url = \"/api/weather\";\n    if (search === \"\") {\n      notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a valid zip code\" } })\n    } else if (search.length > 5 || search.length < 5) {\n      notificationDispatch({ type: UPDATE_NOTIFICATION, notification: { open: true, message: \"Please enter a 5 digit zip code\" } })\n    }\n    else {\n      firebase.user && firebase.updateSearchData(\"weather\", search);\n      props.getInfo(url, { zip: search }).then(weather => {\n        updateWeatherLocation(weather.data.zipCodeCityName);\n        updateWeather(weather.data.daily.data);\n      })\n    }\n  };\n\n  useEffect(() => {\n    firebase.userData && firebase.userData.weather && props.getInfo(\"/api/weather\", { zip: firebase.userData.weather })\n      .then(weather => {\n        updateWeatherLocation(weather.data.zipCodeCityName);\n        updateWeather(weather.data.daily.data)\n      }).catch(err => console.log(err));\n  }, [firebase.userData]);\n  console.log(props);\n  //component layout\n  let content = (\n    <Card>\n      <Box className={classes.icon} display=\"flex\" flexDirection=\"row-reverse\">\n        {props.sizeChange.fullScreen.includes(\"weather\") ?\n          <FullscreenExit\n            onClick={() => props.sizeChange.decreaseSize(\"weather\")} />\n          :\n          <Fullscreen\n            onClick={() => props.sizeChange.increaseSize(\"weather\")} />\n        }\n      </Box>\n      <CardContent>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            image=\"./images/weather.jpg\"\n            title=\"weather\"\n          />\n        </CardActionArea>\n        <Typography variant=\"h5\" component=\"h2\" className=\"cardHeader\">\n          Weather {weatherLocation && `for ${weatherLocation}`}\n        </Typography>\n        <Box container=\"true\" alignItems=\"center\">\n          {weather &&\n            <Zoom in={weather ? true : false} timeout={600}>\n              <Table >\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>High</TableCell>\n                    <TableCell>Low</TableCell>\n                    {props.rawScreenSize > 379 &&\n                      <TableCell>Summary</TableCell>\n                    }\n                  </TableRow>\n                </TableHead>\n                <TableBody className={props.screenSize === \"small\" ? \"compactTable\" : null}>\n                  {weather.map((day) => {\n                    return (\n                      <TableRow key={day.time}>\n                        <TableCell>{moment(day.time, \"X\").format(\"MMMM Do\")}</TableCell>\n                        <TableCell>{day.apparentTemperatureHigh}F</TableCell>\n                        <TableCell>{day.apparentTemperatureLow}F</TableCell>\n                        { props.rawScreenSize > 379 &&\n                          <TableCell>{day.summary}</TableCell>\n                        }\n                      </TableRow>\n                    )\n                  })}\n                </TableBody>\n              </Table>\n            </Zoom>\n          }\n        </Box>\n      </CardContent>\n      <Box display=\"flex\" justifyContent=\"center\" mb={1}>\n        <CardActions>\n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Weather by zip code</InputLabel>\n            <Input id=\"my-input\" aria-describedby=\"search for weather\" value={search} onChange={handleChange} />\n          </FormControl>\n          <Button size=\"large\" onClick={fetchData}>Get Weather</Button>\n        </CardActions>\n      </Box>\n    </Card>\n  )\n  return content;\n\n}\n\nexport default Weather;","import React, { useState } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport axios from 'axios'\nimport News from './News';\nimport Stocks from './Stocks';\nimport Tasks from './Tasks';\nimport Weather from './Weather';\n\n\nconst Controller = props => {\n\n    const [screenSize, updateScreenSize] = useState(window.innerWidth > 959 ? \"large\" : \"small\");\n\n    const [rawScreenSize, updateRawScreenSize] = useState(window.innerWidth);\n\n\n    window.addEventListener(\"resize\", function () {\n        window.innerWidth > 959 ? updateScreenSize(\"large\") : updateScreenSize(\"small\");\n        updateRawScreenSize(window.innerWidth);\n    })\n\n    const apiPost = (route, data) => {\n        return axios.post(route, data);\n    };\n\n    const [fullScreen, updateFullScreen] = useState([null]);\n\n    const increaseSize = (item) => {\n        updateFullScreen([...fullScreen, item]);\n    };\n\n    const decreaseSize = (item) => {\n        let filtered = fullScreen.filter(elem => elem !== item);\n        updateFullScreen(filtered);\n    };\n\n    let content = (\n        <Grid\n            container\n            spacing={screenSize === \"large\" ? 2 : 0}\n        >\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"news\") ? 12 : 6}\n                lg={fullScreen.includes(\"news\") ? 12 : 6}\n            >\n                <News getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} />\n            </Grid>\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"weather\") ? 12 : 6}\n                lg={fullScreen.includes(\"weather\") ? 12 : 6}\n            >\n                <Weather getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} screenSize={screenSize} rawScreenSize={rawScreenSize} />\n            </Grid>\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"stocks\") ? 12 : 6}\n                lg={fullScreen.includes(\"stocks\") ? 12 : 6}\n            >\n                <Stocks getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} screenSize={screenSize} />\n            </Grid>\n            <Grid\n                item\n                sm={12}\n                md={fullScreen.includes(\"tasks\") ? 12 : 6}\n                lg={fullScreen.includes(\"tasks\") ? 12 : 6}\n            >\n                <Tasks getInfo={apiPost} sizeChange={{ increaseSize, decreaseSize, fullScreen }} />\n            </Grid>\n        </Grid>\n    )\n    return content;\n}\n\nexport default Controller;","import React, { useContext } from 'react';\nimport { Snackbar } from \"@material-ui/core\";\nimport NotificationContext from \"./Context/NotificationContext\";\nimport { UPDATE_NOTIFICATION } from \"./Reducers/NotificationsReducer\"\n\nconst NotificationSnackbar = (props) => {\n\nconst [state, stateDispatch] = useContext(NotificationContext);\n\n    let content = (\n        <> {state &&\n        <Snackbar\n            open={state.notification.open}\n            onClose={() => stateDispatch({type: UPDATE_NOTIFICATION, notification: {open: false, message: \"\"}})}\n            autoHideDuration={3000}\n            message={state.notification.message}\n            >\n        </Snackbar>\n        }\n        </>\n    )\n\n    return content;\n\n}\n\nexport default NotificationSnackbar;","import React, { useContext, useReducer } from \"react\";\nimport NotificationsContext from \"./Context/NotificationContext\";\nimport NotificationsReducer from \"./Reducers/NotificationsReducer\";\nimport NotificationContext from \"./Context/NotificationContext\"\n\nconst NotificationProvider = (props) => {\n\n    const defaultState = useContext(NotificationContext);\n\n    const [state, notificationDispatch] = useReducer(NotificationsReducer, defaultState);\n\n    return (\n        <NotificationsContext.Provider value={[state, notificationDispatch]}>\n            {props.children}\n        </NotificationsContext.Provider>\n    );\n\n};\n\nexport default NotificationProvider;","import React, { useState, useEffect } from \"react\";\nimport FirebaseContext from \"./Context/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firebase-firestore\";\nimport \"firebase/auth\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCNj-zPSwifJfaluXLT7ZlPepFqD9dJn14\",\n    authDomain: \"daily-dash-1553976444540.firebaseapp.com\",\n    databaseURL: \"https://daily-dash-1553976444540.firebaseio.com\",\n    projectId: \"daily-dash-1553976444540\",\n    storageBucket: \"daily-dash-1553976444540.appspot.com\",\n    messagingSenderId: \"328742274675\",\n    appId: \"1:328742274675:web:ade0772859ba511e\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst FirebaseProvider = (props) => {\n\n    const [userData, updateUserData] = useState();\n\n    const [user, updateUser] = useState(null);\n\n    const addTask = (task) => {\n        return db.collection(\"users\").doc(user.uid).collection(\"todos\").add({ name: task, completed: false });\n    };\n\n    const updateTask = (task, completed, taskId) => {\n        return db.collection(\"users\").doc(user.uid).collection(\"todos\").doc(taskId).update({ name: task, completed: completed });\n    };\n\n    const deleteTask = (taskId) => {\n        return db.collection(\"users\").doc(user.uid).collection(\"todos\").doc(taskId).delete();\n    };\n\n    const signIn = (email, password) => {\n        return firebase.auth().signInWithEmailAndPassword(email, password);\n    };\n\n    const createAccount = (email, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(email, password);\n    };\n\n    const addProfilePic = (url) => {\n        return db.collection(\"users\").doc(user.uid).update({ \"profilePic\": url });\n    }\n\n    const updateSearchData = (key, value) => {\n        switch (key) {\n            case \"weather\":\n                db.collection(\"users\").doc(user.uid).update({ \"weather\": value })\n                    .then().catch(err => console.log(err));\n                break;\n            case \"news\":\n                db.collection(\"users\").doc(user.uid).update({ \"news\": value })\n                    .then().catch(err => console.log(err));\n                break;\n            case \"stocks\":\n                db.collection(\"users\").doc(user.uid).update({ \"stocks\": value })\n                    .then().catch(err => console.log(err));\n                break;\n            default:\n                console.log(\"Error no items to update in database\");\n        }\n    }\n\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                // updateUser(user);\n                db.collection(\"users\").doc(user.uid).get().then(userData => {\n                    let name = `${userData.data().firstName} ${userData.data().lastName}`;\n                    let userInfo = userData.data();\n                    let userWithName = { ...user, name, userInfo }\n                    updateUser(userWithName);\n                });\n                db.collection(\"users\").doc(user.uid).onSnapshot(doc => {\n                    updateUserData(doc.data());\n                });\n                db.collection(\"users\").doc(user.uid).collection(\"todos\").onSnapshot(todos => {\n                    let todoList = [];\n                    todos.forEach(todoItem => {\n                        let todo = { id: todoItem.id, ...todoItem.data() };\n                        todoList.push(todo);\n                    });\n                    updateUserData(prev => { return { ...prev, tasks: todoList } });\n\n                });\n            } else {\n                updateUser(null);\n            }\n        });\n    }, []);\n\n    const addUser = (uid, data) => {\n        db.collection(\"users\").doc(uid).set(data).then(newUser => {\n        });\n    };\n\n    const signOut = () => {\n        updateUser(null);\n        updateUserData(null);\n        firebase.auth().signOut().then(() => {\n            window.location.reload();\n        });\n    };\n\n    let state = {\n        updateSearchData: updateSearchData,\n        userData: userData,\n        addTask: addTask,\n        deleteTask: deleteTask,\n        updateTask: updateTask,\n        signIn: signIn,\n        createAccount: createAccount,\n        user: user,\n        signOut: signOut,\n        addUser: addUser,\n        addProfilePic: addProfilePic\n    }\n\n    return (\n        <FirebaseContext.Provider value={state}>\n            {props.children}\n        </FirebaseContext.Provider>\n    );\n\n};\n\nexport default FirebaseProvider;","import React from 'react';\nimport './App.css';\nimport Nav from './Components/Nav';\nimport Footer from \"./Components/Footer\";\nimport Controller from './Components/Controller';\nimport NotificationSnackbar from \"./Components/NotificationSnackbar\";\nimport NotificationProvider from \"./Components/NotificationProvider\"\nimport { Box } from \"@material-ui/core\";\nimport FirebaseProvider from \"./Components/FirebaseProvider\";\n\n// const SnackContext = createContext(\"snack\");\n\nfunction App() {\n\n  return (\n    <NotificationProvider>\n      <FirebaseProvider>\n        <Nav />\n        <Box>\n          <Controller />\n          <NotificationSnackbar />\n        </Box>\n      </FirebaseProvider>\n      <Footer />\n    </NotificationProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}